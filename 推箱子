#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<conio.h>
//▆☆★※※⊙
#define cas 2
int map[cas][10][10] =
{
	//1▆墙  3☆目的地  4★箱子  5※  7⊙  8※
	{
		0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,1,1,1,0,0,0,
		0,0,0,0,1,3,1,0,0,0,
		0,1,1,1,1,0,1,0,0,0,
		0,1,3,4,0,4,1,1,1,0,
		0,1,1,1,5,4,0,3,1,0,
		0,0,0,1,4,1,1,1,1,0,
		0,0,0,1,3,1,0,0,0,0,
		0,0,0,1,1,1,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,
	},
    {
		0,0,0,0,0,0,0,0,0,0,
		0,0,0,1,1,1,1,1,1,0,
		0,1,1,1,0,0,0,0,1,0,
		1,1,3,0,4,1,1,0,1,1,
		1,3,3,4,0,4,0,0,5,1,
		1,3,3,0,4,0,4,0,1,1,
		1,1,1,1,1,1,0,0,1,0,
		0,0,0,0,0,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0
    }
};
int cur = 0;
void DrawMap()
{
	printf("         第%d关\n", cur + 1);
	for (int i = 0; i < 10; ++i)
	{
		for (int j = 0; j < 10; ++j)
		{
			switch(map[cur][i][j])
			{
				case 0:
					printf("  "); break;
				case 1:
					printf("▆"); break;
				case 3:
					printf("☆"); break;
				case 4:
					printf("★"); break;
				case 5:
					printf("※"); break;
				case 7:
					printf("⊙"); break;
				case 8:
					printf("※"); break;
				default:
					break;
			}		
		}
		printf("\n");
	}
}
//行走
void KeyDown()
{
	//获取人的位置
	int i, j;
	for (i = 0; i < 10; ++i)
	{
		for (j = 0; j < 10; ++j)
		{
			if (map[cur][i][j] == 5 || map[cur][i][j] == 8)
			{
				break;
			}
		}
		if (map[cur][i][j] == 5 || map[cur][i][j] == 8)
		{
			break;
		}
	}
	char ch = _getch();
	switch (ch)
	{
		case 'w':
		case 'W':
		case 72:
		{
			if (map[cur][i - 1][j] == 0 || map[cur][i - 1][j] == 3)
			{
				map[cur][i - 1][j] += 5;
				map[cur][i][j] -= 5;
			}
			else if ((map[cur][i - 1][j] == 4 || map[cur][i - 1][j] == 7)
				&& (map[cur][i - 2][j] == 0 || map[cur][i - 2][j] == 3))
			{
				map[cur][i - 2][j] += 4;
				map[cur][i - 1][j] += 1;
				map[cur][i][j] -= 5;
			}
		}
			break;
		case 's':
		case 'S':
		case 80:
		{
			if (map[cur][i + 1][j] == 0 || map[cur][i + 1][j] == 3)
			{
				map[cur][i + 1][j] += 5;
				map[cur][i][j] -= 5;
			}
			else if ((map[cur][i + 1][j] == 4 || map[cur][i + 1][j] == 7)
				&& (map[cur][i + 2][j] == 0 || map[cur][i + 2][j] == 3))
			{
				map[cur][i + 2][j] += 4;
				map[cur][i + 1][j] += 1;
				map[cur][i][j] -= 5;
			}
		}
			break;
		case 'a':
		case 'A':
		case 75:
		{
			if (map[cur][i][j-1] == 0 || map[cur][i][j-1] == 3)
			{
				map[cur][i][j-1] += 5;
				map[cur][i][j] -= 5;
			}
			else if ((map[cur][i][j-1] == 4 || map[cur][i][j-1] == 7)
				&& (map[cur][i][j-2] == 0 || map[cur][i][j-2] == 3))
			{
				map[cur][i][j-2] += 4;
				map[cur][i][j-1] += 1;
				map[cur][i][j] -= 5;
			}
		}
			break;
		case 'd':
		case 'D':
		case 77:
		{
			if (map[cur][i][j + 1] == 0 || map[cur][i][j + 1] == 3)
			{
				map[cur][i][j + 1] += 5;
				map[cur][i][j] -= 5;
			}
			else if ((map[cur][i][j + 1] == 4 || map[cur][i][j + 1] == 7)
				&& (map[cur][i][j + 2] == 0 || map[cur][i][j + 2] == 3))
			{
				map[cur][i][j + 2] += 4;
				map[cur][i][j + 1] += 1;
				map[cur][i][j] -= 5;
			}
		}
			break;
		default:
			break;
	}
}
//判断胜负
int IsWin()
{
	int count = 0;
	for (int i = 0; i < 10; ++i)
	{
		for (int j = 0; j < 10; ++j)
		{
			if (map[cur][i][j] == 4)
			{
				count++;
			}
		}
	}
	return count;
}
int main()
{
	while (1)
	{
		DrawMap();
		if (IsWin() == 0)
		{
			cur++;
			if (cur == cas)
			{
				printf("GameOver");
				break;
			}
			system("pause");
		}
		KeyDown();
		system("cls");
		
	}
	
	system("pause");
	return 0;
}
